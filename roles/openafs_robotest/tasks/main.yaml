---
- name: Gather variables for each operating system
  include_vars: "{{ item }}"
  with_first_found:
    - "../vars/{{ ansible_distribution|lower }}{{ ansible_distribution_version }}.yaml"
    - "../vars/{{ ansible_distribution|lower }}{{ ansible_distribution_major_version }}.yaml"
    - "../vars/{{ ansible_distribution|lower }}.yaml"
    - "../vars/{{ ansible_os_family|lower }}.yaml"
    - "../vars/defaults.yaml"

- name: Gather OpenAFS installation paths
  include_vars: "{{ item }}"
  with_first_found:
    - "../vars/dist/{{ ansible_distribution|lower }}{{ ansible_distribution_version }}.yaml"
    - "../vars/dist/{{ ansible_distribution|lower }}{{ ansible_distribution_major_version }}.yaml"
    - "../vars/dist/{{ ansible_distribution|lower }}.yaml"
    - "../vars/dist/{{ ansible_os_family|lower }}.yaml"
  when: afs_robotest_dist == "package"

- name: Gather OpenAFS installation paths
  include_vars: "../vars/dist/{{ afs_robotest_dist|lower }}.yaml"
  when: afs_robotest_dist != "package"

- name: Install packages
  include_tasks: "{{ item }}"
  with_first_found:
    - "install-packages/{{ ansible_distribution|lower }}{{ ansible_distribution_version }}.yaml"
    - "install-packages/{{ ansible_distribution|lower }}{{ ansible_distribution_major_version }}.yaml"
    - "install-packages/{{ ansible_distribution|lower }}.yaml"
    - "install-packages/{{ ansible_os_family|lower }}.yaml"
    - "unknown.yaml"

- name: Install web server
  include_tasks: "{{ item }}"
  with_first_found:
    - "webserver/{{ ansible_distribution|lower }}{{ ansible_distribution_version }}.yaml"
    - "webserver/{{ ansible_distribution|lower }}{{ ansible_distribution_major_version }}.yaml"
    - "webserver/{{ ansible_distribution|lower }}.yaml"
    - "webserver/{{ ansible_os_family|lower }}.yaml"
    - "unknown.yaml"
  when: afs_robotest_install_webserver|bool

- name: Create tester user account
  become: yes
  user:
    name: "{{ afs_robotest_user }}"
    shell: /bin/bash

- name: Download OpenAFS test cases
  become: yes
  become_user: "{{ afs_robotest_user }}"
  git:
    repo: https://github.com/openafs-contrib/openafs-robotest.git
    dest: "{{ afs_robotest_home }}"
    version: "{{ afs_robotest_version }}"

- name: Create config directory
  become: yes
  become_user: "{{ afs_robotest_user }}"
  file:
    path: "{{ afs_robotest_confdir }}"
    state: directory

- name: Install config files
  become: yes
  become_user: "{{ afs_robotest_user }}"
  template:
    src: "{{ item }}.j2"
    dest: "{{ afs_robotest_confdir }}/{{ item }}"
  with_items:
    - robotrc
    - local.py

- name: Install shell script to run tests
  become: yes
  template:
    src: run-openafs-robotest.sh.j2
    dest: /usr/bin/run-openafs-robotest.sh
    mode: 0755
