---
- name: Gather variables for each operating system
  include_vars: "{{ item }}"
  with_first_found:
    - "../vars/{{ ansible_distribution|lower }}{{ ansible_distribution_version }}.yaml"
    - "../vars/{{ ansible_distribution|lower }}{{ ansible_distribution_major_version }}.yaml"
    - "../vars/{{ ansible_distribution|lower }}.yaml"
    - "../vars/{{ ansible_os_family|lower }}.yaml"
    - "../vars/defaults.yaml"

- include_tasks: "system-{{ afs_firewall }}.yaml"
  when: afs_firewall is defined

- name: Check cache directory
  file:
    state: directory
    path: "{{ afs_afscachedir }}"
    mode: 0700
    owner: root
    group: root

- name: Check cache directory
  file:
    state: directory
    path: "{{ afs_viceetcdir }}"
    mode: 0755
    owner: root
    group: root

- include_tasks: "install-{{ ansible_pkg_mgr }}.yaml"
  when: afs_client_install_method == 'package-manager'

- include_tasks: "install-{{ afs_client_install_method }}.yaml"
  when: afs_client_install_method != 'package-manager'

- name: Ensure public cell configuration file exists (CellServDB.dist)
  copy:
    content: ""
    dest: "{{ afs_viceetcdir }}/CellServDB.dist"
    mode: 0644
    force: no

- name: Check CellServDB file
  delegate_to: localhost
  stat:
    path: "{{ afs_local_dir }}/CellServDB"
  register: cellservdb_st

- name: Update local cell configuration file (CellServDB.local)
  copy:
    src: "{{ afs_local_dir }}/CellServDB"
    dest: "{{ afs_viceetcdir }}/CellServDB.local"
    mode: 0644
    owner: root
    group: root
  when: cellservdb_st.stat.exists is defined and cellservdb_st.stat.exists

- name: Ensure local cell configuration file exists (CellServDB.local)
  copy:
    content: "{{ afs_cell }}  #Cell name\n"
    dest: "{{ afs_viceetcdir }}/CellServDB.local"
    mode: 0644
    owner: root
    group: root
    force: no

- name: Combine local and public cell database (CellServDB.ansible)
  shell: cat CellServDB.local CellServDB.dist > CellServDB.ansible
  args:
    chdir: "{{ afs_viceetcdir }}"
  changed_when: false

- name: Update CellServDB
  copy:
    remote_src: true
    src: "{{ afs_viceetcdir }}/CellServDB.ansible"
    dest: "{{ afs_viceetcdir }}/CellServDB"
    mode: 0644
    owner: root
    group: root
  notify:
    - Restart OpenAFS client

- name: Set local cell name
  copy:
    content: "{{ afs_cell }}"
    dest: "{{ afs_viceetcdir }}/ThisCell"
    mode: 0644
    owner: root
    group: root
  notify:
    - Restart OpenAFS client

- name: Update cache configuration
  template:
    src: cacheinfo.j2
    dest: "{{ afs_viceetcdir }}/cacheinfo"
    mode: 0644
    owner: root
    group: root
  notify:
    - Restart OpenAFS client

- name: Start OpenAFS client
  service:
    state: started
    enabled: yes
    name: "{{ afs_client_service }}"
  register: afs_client_service_result
