---
- name: Gather variables for each operating system
  include_vars: "{{ ansible_os_family|lower }}.yaml"

- name: Verify the admin password is defined
  fail:
    msg: |
      Please define afs_admin_password before running this role.
      It may be defined as a group variable (preferably encrypted
      with ansible-vault) or provided on the command line with
      the --extra-vars (-e) option.
  when: afs_admin_password is not defined

- name: Create cell-wide configuration files
  run_once: true
  local_action:
    module: template
    src: "{{ item }}.j2"
    dest: "{{ inventory_dir }}/files/{{ item }}"
  with_items:
    - CellServDB
    - ThisCell
    - UserList

- name: Create the Kerberos service key
  command: >
    {{ afs_kadmin }}
    -w {{ afs_admin_password }}
    -p {{ afs_admin_principal }}@{{ afs_realm }}
    -r "{{ afs_realm }}"
    -q "add_principal -randkey afs/{{ afs_cell }}@{{ afs_realm }}"
  register: kadmin_results
  changed_when: >
    kadmin_results.rc == 0
    and not "already exists while creating" in kadmin_results.stderr
  when: inventory_hostname == ansible_play_hosts[0]

- name: Start firewall
  systemd:
    name: firewalld
    enabled: yes
    state: started

- name: Permit afs3 traffic
  firewalld:
    port: 7000-7009/udp
    immediate: yes
    permanent: yes
    state: enabled

- name: Setup SELinux mode
  selinux:
    state: "{{ afs_selinux_mode }}"
    policy: targeted

- name: Setup SELinux policies
  include_tasks: "{{ ansible_os_family|lower }}/selinux.yaml"
  when: afs_selinux_mode == 'enforcing' or afs_selinux_mode == 'permissive'

- include_tasks: server-partitions.yaml

- include_tasks: "{{ ansible_os_family|lower }}/install-{{ afs_server_install_method }}.yaml"

- name: Set bosserver options
  lineinfile:
    path: /etc/sysconfig/openafs
    regexp: '^BOSSERVER_ARGS='
    line: 'BOSSERVER_ARGS="{{ afs_bosserver_opts }}"'
    state: present

- include_tasks: server-config.yaml

- include_tasks: server-setkey.yaml

## Patch up the contexts for the directories and files
## that were created while in unconfined_t
- name: "Restore directory contexts for selinux"
  command: restorecon -ir {{ item }}
  with_items:
    -  /usr/afs
    -  /usr/vice
  when: afs_selinux_mode == 'enforcing' or afs_selinux_mode == 'permissive'

## Same -- for the partitions
- name: "Restore partition contexts for selinux"
  command: restorecon /vicep{{ item }}
  with_items: "{{ afs_partitions }}"
  when: afs_partitions is defined and (afs_selinux_mode == 'enforcing' or afs_selinux_mode == 'permissive')

- name: Start the OpenAFS servers
  service:
    name: openafs-server
    state: started
    enabled: yes

# The first admin user must be created with -localauth.
- include_tasks: server-admin-user.yaml
  when: inventory_hostname == ansible_play_hosts[0]

# The root.afs volume must exist before non-dynroot clients can mount /afs.
- include_tasks: server-root-volume.yaml
  when: inventory_hostname == ansible_play_hosts[0]
