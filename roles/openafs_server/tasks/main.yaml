---
- name: Gather variables for each operating system
  include_vars: "{{ ansible_os_family|lower }}.yaml"

- name: Verify the admin password is defined
  fail:
    msg: |
      Please define afs_admin_password before running this role.
      It may be defined as a group variable (preferably encrypted
      with ansible-vault) or provided on the command line with
      the --extra-vars (-e) option.
  when: afs_admin_password is not defined

- name: Create temp directory for our cell-wide configuration files
  run_once: true
  delegate_to: localhost
  file:
    path: "{{ afs_openafs_server_tmpdir }}/{{ afs_cell }}"
    state: directory
    mode: 0755

- name: Create cell-wide configuration files
  run_once: true
  delegate_to: localhost
  template:
    src: "{{ item }}.j2"
    dest: "{{ afs_openafs_server_tmpdir }}/{{ afs_cell }}/{{ item }}"
  with_items:
    - CellServDB
    - ThisCell
    - UserList

- name: Create the Kerberos service key
  command: >
    {{ afs_kadmin }}
    -w {{ afs_admin_password }}
    -p {{ afs_admin_principal }}@{{ afs_realm }}
    -r "{{ afs_realm }}"
    -q "add_principal -randkey afs/{{ afs_cell }}@{{ afs_realm }}"
  register: kadmin_results
  changed_when: >
    kadmin_results.rc == 0
    and not "already exists while creating" in kadmin_results.stderr
  when: inventory_hostname == ansible_play_hosts[0]

- include_tasks: "system-{{ afs_firewall }}.yaml"
  when: afs_firewall is defined

- name: Setup SELinux mode
  selinux:
    state: "{{ afs_selinux_mode }}"
    policy: targeted
  when: afs_selinux|bool and afs_selinux_mode in ['disabled','enforcing','permissive']

- name: Setup SELinux policies
  include_tasks: selinux-policies.yaml
  when: afs_selinux|bool

- include_tasks: server-partitions.yaml

- include_tasks: "install-{{ ansible_pkg_mgr }}.yaml"
  when: afs_server_install_method == 'package-manager'

- include_tasks: "install-{{ afs_server_install_method }}.yaml"
  when: afs_server_install_method != 'package-manager'

- include_tasks: server-config.yaml

- include_tasks: server-key.yaml

- include_tasks: selinux-contexts.yaml
  when: afs_selinux|bool

- name: Start the OpenAFS servers
  service:
    name: "{{ afs_server_service }}"
    state: started
    enabled: yes
  register: afs_server_service_result

- include_tasks: cell-bootstrap.yaml
  when: inventory_hostname == ansible_play_hosts[0]
